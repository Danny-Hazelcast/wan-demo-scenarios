#!/usr/bin/env bash

set -e

hzVersion=${1:-$(hazelcastVersion)}

cleanup() {
    exitCode=$?
    hz download
    hz chart metrics
    exit ${exitCode}
}
trap "cleanup" INT TERM EXIT

ec2Type="c4.2xlarge"
aws-create --count 3 --instanceType ${ec2Type} --outputFile a.box
aws-create --count 3 --instanceType ${ec2Type} --outputFile b.box
aws-create --count 3 --instanceType ${ec2Type} --outputFile c.box

ops="${ops} -Dhazelcast.enterprise.license.key=${HAZELCAST_EE_KEY} -Dhazelcast.backpressure.enabled=true"
ops="${ops} -Dhazelcast.enterprise.wanrep.batch.size=150"

mOps="${mOps} -Dhazelcast.hotrestart.gc.stuck.detect.threshold=10000 -Dhazelcast.hotrestart.free.native.memory.percentage=15"
mOps="${mOps} -Dhazelcast.connection.monitor.interval=1000 -Dhazelcast.connection.monitor.max.faults=30 -Dhazelcast.rest.enabled=true"

hz memberOps "-Xms4G -Xmx4G ${ops} ${mOps}"
hz clientOps "-Xms400M -Xmx400M ${ops}"

hz cluster -id A -size M5C10 -v ${hzVersion} -ee -boxes a.box
hz cluster -id B -size M5C10 -v ${hzVersion} -ee -boxes b.box
hz cluster -id C -size M5C10 -v ${hzVersion} -ee -boxes c.box

hz wan A B C
hz bounce Member

hz run -id A load
sleep 30
hz run validate
hz run clusterShutdown Member
hz embeddedRestart Member

until hz run clusterSafe; do
    sleep 10
done
hz run validate

hz run -id A put &
hz run -id '(B|C)' get &
wait

hz run -id A clusterShutdown
hz embeddedRestart -id A Member

pubIp=$(hz ip -id A Member1);
for i in {0..8} ; do
    for group in B C D E ${hzVersion} ; do
        curl -H "Content-type: text/plain" -X POST -d "wanReplication&${group}&mapBak1HD${i}" --URL http://${pubIp}:5701/hazelcast/rest/wan/sync/map
    done
done


